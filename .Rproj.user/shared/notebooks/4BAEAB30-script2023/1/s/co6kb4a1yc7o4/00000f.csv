"0",""
"0","#une autre approche par regex est sans doute meilleure"
"0",""
"0","#par exemple"
"0",""
"0","#performance"
"0",""
"0","dn$t_Performance<-ifelse(str_detect(dn$text,""[P|p]erform.*"")==TRUE, 1,0)/dn$n_words"
"0","dn$t_Rentabilité<-ifelse(str_detect(dn$text,""[R|r]entab.*"")==TRUE, 1,0)/dn$n_words"
"0","dn$t_Efficacité<-ifelse(str_detect(dn$text,""[E|e]fficac.*"")==TRUE, 1,0)/dn$n_words"
"0","#dn$t_Efficience<-ifelse(str_detect(dn$text,""[E|e]effici.*"")==TRUE, 1,0)/dn$n_words"
"0","dn$t_Rentabilité<-ifelse(str_detect(dn$text,""[R|r]entab.*"")==TRUE, 1,0)/dn$n_words"
"0","dn$t_Evaluation<-ifelse(str_detect(dn$text,""[E|é]valu.*"")==TRUE, 1,0)/dn$n_words"
"0",""
"0","foo<-dn %>%"
"0","  select(Key,Year,t_Performance, t_Rentabilité, t_Efficacité, #t_Efficience, "
"0","         t_Rentabilité, t_Evaluation)%>% "
"0","  pivot_longer(-c(Key, Year), names_to = ""variable"", values_to = ""taux"") %>%"
"0","  group_by(Year, variable)%>%"
"0","  summarise(taux=mean(taux))  %>%"
"0","  ungroup()"
"2","`summarise()` has grouped output by 'Year'. You can override using the `.groups` argument."
"0","              "
"0","            "
"0","foo1<-foo %>%"
"0","  pivot_wider(id_cols =Year, names_from = ""variable"", values_from = ""taux"") %>%"
"0","  select(-Year)"
"0",""
"0","ggplot(foo,aes(x=Year,y=taux,group=variable))+"
"0","#  geom_line(stat=""identity"", aes(color=variable), linewidth=1)+"
"0","  geom_smooth(aes(color=variable), span=.35, alpha=.1)+"
"0","  scale_y_continuous(labels=scales::percent, limits=c(0, NA))+"
"0","  labs(y=""densité"", x=NULL, title = ""Performance"")+"
"0","    scale_color_manual(values = c(""#ca7dcc"","
"0","                                ""#fb6a4a"","
"0","                                ""orange"","
"0","                                ""#67000d"", ""Firebrick""))"
