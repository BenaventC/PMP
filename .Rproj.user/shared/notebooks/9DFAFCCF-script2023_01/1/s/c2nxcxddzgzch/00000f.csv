"0",""
"0",""
"0","#performance"
"0",""
"0","dn$Performance<-str_count(dn$text,""[P|p]erform.*"")/dn$n_words"
"0","dn$Rentabilité<-str_count(dn$text,""[R|r]entab.*"")/dn$n_words"
"0","dn$Efficacité<-str_count(dn$text,""[E|e]fficac.*"")/dn$n_words"
"0","#dn$Efficience<-str_count(dn$text,""[E|e]effici.*"")/dn$n_words"
"0","dn$Rentabilité<-str_count(dn$text,""[R|r]entab.*"")/dn$n_words"
"0","dn$Evaluation<-str_count(dn$text,""[E|é]valu.*"")/dn$n_words"
"0","dn$Controle<-str_count(dn$text,""[C|c]ontrôl.*"")/dn$n_words"
"0",""
"0",""
"0","foo<-dn %>%"
"0","  select(Key,Year,Performance, Rentabilité, Efficacité, #Efficience, "
"0","         Rentabilité, Evaluation, Controle)%>% "
"0","  pivot_longer(-c(Key, Year), names_to = ""variable"", values_to = ""taux"") %>%"
"0","  group_by(Year, variable)%>%"
"0","  summarise(taux=mean(taux))  %>%"
"0","  ungroup()"
"2","`summarise()` has grouped output by 'Year'. You can override using the `.groups` argument."
"0","              "
"0","            "
"0","foo1<-foo %>%"
"0","  pivot_wider(id_cols =Year, names_from = ""variable"", values_from = ""taux"") %>%"
"0","  select(-Year)"
"0",""
"0","ggplot(foo,aes(x=Year,y=taux,group=variable))+"
"0","#  geom_line(stat=""identity"", aes(color=variable), linewidth=1)+"
"0","  geom_smooth(aes(color=variable), span=.45, alpha=.1)+"
"0","  scale_y_continuous(labels=scales::percent, limits=c(0,0.0025))+"
"0","  labs(y=""densité"", x=NULL, title = ""Performance"")+"
"0","    scale_color_manual(values = col)"
